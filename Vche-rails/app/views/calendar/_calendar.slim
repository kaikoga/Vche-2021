- calendar ||= nil
- form ||= nil
- enable_recent ||= false
- enable_filters ||= false

- _calendar_params = filtered_params
- _calendar_params.merge!(form.params) if form
- _calendar_class = "calendar -cells -#{calendar.format}"

- if enable_recent && calendar.current? && calendar.recent_events.present?
  .panel
    = render 'event_histories/cell_event_cards', cell_events: calendar.recent_events, edit: enable_recent == :edit

nav.calendar__nav
  = form_with(url: filtered_params, method: :get, class: '-inline') do |form|
    = form.select :calendar, calendar.options, { selected: params[:calendar] }, onchange: "javascript: this.form.submit();"
  = link_to("=", _calendar_params.except(:date), class: :button)
  = link_to("< #{calendar.prev_date_text}", _calendar_params.merge(date: calendar.prev_date_str), class: :button)
  - unless calendar.current?
    span.current = calendar.current_date_text
  = link_to("#{calendar.next_date_text} >", _calendar_params.merge(date: calendar.next_date_str), class: :button)
  - if enable_filters
    = render 'category_select', form: form
    = render 'trust_select', form: form
    = render 'taste_select', form: form

- calendar.cells_by_date.each_slice(7) do |slice|
  div class=_calendar_class
    .calendar__headers
      - slice.each do |date, cell|
        div class=css_class_of_time(date, :calendar__header)
          = l(date, format: :mda)
    .calendar__cells
      - slice.each do |date, cell|
        div class=css_class_of_time(date, :calendar__cell)
          - unless calendar.per_months?
            - calendar.bar_positions.each do |h|
              .bar.-calendar style="top:#{calendar.hour_to_y(h)}rem" = "#{h}:00"
          - cell.events.each do |cell_event|
            - calendar_event_class = 'event -calendar'
            - calendar_event_class << ' -masked' if cell_event.masked?
            - if cell_event.offline?
              - calendar_event_class << ' -offline'
            - else
              - calendar_event_class << ' -event'
              - calendar_event_class << " -attending -role_#{cell_event.role}" if cell_event.attending?
              - calendar_event_class << " -resolution_#{cell_event.resolution}"
            - if calendar.per_months?
              - calendar_event_style = nil
            - else
              - start_y = calendar.time_to_y(cell_event.started_at)
              - end_y = calendar.time_to_y([cell_event.started_at.end_of_day, cell_event.ended_at].min) - start_y
              - calendar_event_style = "top:#{start_y}rem;left:#{cell_event.offset * 2}rem;height:#{end_y}rem;"
            div class=calendar_event_class style=calendar_event_style
              - event_name = cell_event.time_and_name
              - history = cell_event.event_history
              - if history
                = link_to cell_event.time_and_name, event_event_history_path(history.event, history), class: :entry, title: event_name
              - else
                span.entry title=event_name = event_name
