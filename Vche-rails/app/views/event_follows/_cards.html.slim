- event_follows ||= nil
- card_cloud ||= false
- actions ||= nil
- _layout = card_cloud ? 'card_cloud' : 'card_list'

div class="event_follows -#{_layout}"
  - event_follows.each do |event_follow|
    .event_follow.-card
      - event = event_follow.event
      - user = event_follow.user

      = link_to user_icon_tag(user), user
      div
        div.primary_sns_name = user.primary_sns_name
        div.display_name = link_to user.display_name, user

      - op = Operations::Event::UpdateUserRole.new(event: event, user: user, role: :staff)
      - if loyalty(event, :events).change_user? && user != current_user && actions == :backstage && op.valid?
        = form_with(url: change_user_event_path(event, user_id: user), method: :post, class: '-inline') do |form|
          = form.select :role, EventFollow.role.backstage_options(owner: false), {selected: event_follow.role}, onchange: "javascript: this.form.submit();"
      - else
        span.role = event_follow.role_text

      - case actions
      - when :backstage, :audience
        - if loyalty(event, :events).remove_user?
          - if user == current_user
            = link_to '変更', remove_user_event_path(event, user_id: user), method: :post, class: 'button'
          - else
            = link_to '削除', remove_user_event_path(event, user_id: user), method: :post, class: 'button -negative'
      - when :owner
        - if user != current_user
          = link_to '主催を移譲する', event_owner_path(event, "event[owner_id]" => user), method: :patch, class: 'button -negative', data: { confirm: "この操作は取り消せません。\n本当に主催を変更しますか？ \n新しい主催: #{user.display_name} \nイベント: #{event_follow.event.name}" }
