- _backstage = loyalty(@event_history, 'events/event_histories').backstage?

.panel.-roundbox
  p
    = inline_resolution_tag @event_history.resolution
  - case @event_history.resolution.to_sym
  - when :scheduled
    p
      | 登録されたイベント予定に応じて、イベント日程の枠が確保されています。
    p
      = inline_resolution_tag 'announced'
      | として
      = _backstage ? 'イベントカレンダーに正式に登録するには、' : 'イベントカレンダーに表示するには、'
      = _backstage ? '「イベント開催を告知する」' : '「イベント開催を確定する」'
      | を行ってください。
  - when :announced
    p
      = _backstage ? 'イベントの開催が告知され、イベントカレンダーに正式に登録されています。' : 'イベントが開催される見込みとしてイベントカレンダーに表示されています。'
      | イベントが完了した際には、
      = _backstage ? '「イベントを完了する」' : '「イベントの完了を確定する」'
      | を行ってください。
  - when :moved
    p このイベント日程は時間が変更されています。
  - when :canceled
    p このイベント日程は開催が中止されています。
  - when :ended
    p
      | このイベント日程は、開催告知を行わずにイベント終了時刻を経過しています。
      | もしこのイベントが開催されていた場合は、
      = _backstage ? '「イベントを完了する」' : '「イベントの完了を確定する」'
      | を行ってください。
  - when :completed
    p このイベントは無事に完了しています。おつかれさまでした。

  - if @event_history.resolution.to_sym.in? [:scheduled, :announced, :ended]
    p
      | また、
      = inline_resolution_tag 'moved'
      | でイベントの開催日時の変更を、
      = inline_resolution_tag 'canceled'
      | でイベントの中止を知らせることができます。
