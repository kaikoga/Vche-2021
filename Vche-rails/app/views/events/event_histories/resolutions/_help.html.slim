- _backstage = loyalty(@event_history, 'events/event_histories').backstage?

.panel.-roundbox
  p
    | 現在の状態：
    = inline_resolution_tag @event_history.resolution
  - case @event_history.resolution.to_sym
  - when :candidate
    p
      | 登録されたイベント予定に応じて、開催回の枠が確保されています。
    p
      = inline_resolution_tag 'announced'
      | としてイベントカレンダーに予定を追加するには、
      = _backstage ? '「イベントの開催を告知する」' : '「イベントの開催を報告する」'
      | を行ってください。
  - when :scheduled
    p
      | 登録されたイベント予定に応じて、開催回の枠が確保されています。
    p
      = inline_resolution_tag 'announced'
      | としてイベントカレンダー上で予定を確定させるには、「イベントの開催を告知する」を行ってください。
  - when :announced
    p
      | イベントの開催が告知され、イベントカレンダー上で予定が確定されています。
    p
      | イベントが完了した際には、
      = _backstage ? '「イベントを完了する」' : '「イベントの完了を報告する」'
      | を行ってください。
  - when :information
    p
      | イベントの参加者が開催情報をイベントカレンダーに共有しています。
    p
      | イベントが完了した際には、
      = _backstage ? '「イベントを完了する」' : '「イベントの完了を報告する」'
      | を行ってください。
  - when :moved
    p この開催回は時間が変更されています。
  - when :canceled
    p この開催回は開催が中止されています。
  - when :ended
    p
      | この開催回は、開催告知を行わずにイベント終了時刻を経過しています。
    p
      | もしこのイベントが開催されていた場合は、
      = _backstage ? '「イベントを完了する」' : '「イベントの完了を報告する」'
      | を行ってください。
  - when :completed
    p このイベントは無事に完了しています。おつかれさまでした。

  - if @event_history.resolution.to_sym.in? [:scheduled, :announced, :ended]
    p
      | また、
      = inline_resolution_tag 'moved'
      | でイベントの開催日時の変更を、
      = inline_resolution_tag 'canceled'
      | でイベントの中止を知らせることができます。
