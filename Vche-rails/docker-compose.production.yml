version: '3.9'

# NOTE: This docker-compose is for running RAILS_ENV=production app in local Docker. Not for deployment.

services:
  app: &app
    image: kaikoga/vche-rails
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      RAILS_ENV: production
      VCHE_ENV: production
      VCHE_PUBLIC_CALENDAR_TRUST: all
      VCHE_SUPPORT_EMAIL: support@example.com
      VCHE_SUPPORT_GITHUB: https://example.com/github
      VCHE_SUPPORT_TWITTER: https://example.com/twitter
      VCHE_SUPPORT_DISCORD: https://example.com/discord
      VCHE_TWITTER_KEY: ''
      VCHE_TWITTER_SECRET: ''
      VCHE_TWITTER_CALLBACK_URL: ''
      VCHE_SLACK_DAILY_REPORT_WEBHOOK: ''
      SECRET_KEY_BASE: 7cb138c6247733ca8cc866bc53c712415bf5cf7ca6d19d1fdc0ce1cd71380b33c1536842c23893d0f6f30a93525239b66416451f0fb368ce49c13fcced10f814
      DATABASE_URL: mysql2://root:password@db/vche_production
      RAILS_SERVE_STATIC_FILES: 1
      RAILS_LOG_TO_STDOUT: 1
      VCHE_SOCKET: "unix:///vche/tmp/sockets/vche.sock"
    volumes:
      - ./log:/vche/log
      - vche_socket:/vche/tmp/sockets
    ports:
      - "3000:3000"
    depends_on:
      - db
    stdin_open: true
    tty: true
  nginx:
    image: kaikoga/vche-nginx
    build:
      context: dockerfiles/vche-nginx
      dockerfile: Dockerfile
    volumes:
      - vche_socket:/vche/tmp/sockets
    ports:
      - "8080:80"
    depends_on:
      - app
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
    ports:
      - '3306:3306'
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - db_mysql-production:/var/lib/mysql

volumes:
  vche_socket:
    driver: local
  db_mysql-production:
    driver: local
